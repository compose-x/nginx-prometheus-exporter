---
# Buildspec for building docker image.
version: 0.2
env:
  shell: /bin/bash
  variables:
    GO_VERSION: 1.16
    PUBLIC_REGISTRY: public.ecr.aws/compose-x
    VERSION: 0.9.0
    DOCKER_BUILDKIT: 1

phases:
  install:
    runtime-versions:
      golang: "$(echo $GO_VERSION)"
    commands:
      - REGISTRY_URI=${PUBLIC_REGISTRY}/
      - python -m pip install pip -U; python -m pip install aws-sam-cli -U; python -m pip install docker-compose -U
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${PUBLIC_REGISTRY}
  build:
    commands:
      - GIT_COMMIT=`git rev-parse HEAD`
      - TAG=${VERSION:-$GIT_COMMIT}
      - DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`
      - echo $VERSION - $DATE - $TAG - $GIT_COMMIT
      - go mod download
      - |
          CGO_ENABLED=0 GOOS=linux GOARCH=$TARGETARCH go build -trimpath \
            -a -ldflags "-s -w -X main.version=${VERSION} \
            -X main.commit=${GIT_COMMIT} -X main.date=${DATE:-$EPOCH}" \
            -o nginx-prometheus-exporter .

      - ATTEMPTS=0
      - docker-compose -f .aws/docker-compose.builds.yml build amzn2
      - |
          until [ "${ATTEMPTS}" -ge 5 ]; do
            docker-compose -f .aws/docker-compose.builds.yml build scratch && break
            echo Attempt ${ATTEMPTS}
            ATTEMPTS=$((ATTEMPTS+1))
            sleep 15
          done
      - docker-compose -f .aws/docker-compose.builds.yml push

    finally:
      - rm -rfv ~/.docker
